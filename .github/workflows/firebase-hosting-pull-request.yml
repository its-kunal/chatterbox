# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting

on:
  pull_request:
    paths:
      - 'client/**' # Only trigger on changes in the client directory
      - '.github/**'
  workflow_dispatch: # Allows manual triggering

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build_and_preview:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    env:
      VITE_SERVER_URL: ${{ vars.VITE_SERVER_URL}}
      VITE_API_KEY: ${{ vars.VITE_API_KEY}}
      VITE_AUTH_DOMAIN: ${{ vars.VITE_AUTH_DOMAIN }}
      VITE_PROJECT_ID: ${{ vars.VITE_PROJECT_ID }}
      VITE_STORAGE_BUCKET: ${{ vars.VITE_STORAGE_BUCKET }}
      VITE_MESSAGING_SENDER_ID: ${{ vars.VITE_MESSAGING_SENDER_ID }}
      VITE_APP_ID: ${{ vars.VITE_APP_ID }}
      VITE_MEASUREMENT_ID: ${{ vars.VITE_MEASUREMENT_ID }}
      VITE_FIREBASE_VAPID_KEY: ${{ vars.VITE_FIREBASE_VAPID_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: client # Checkout *only* the client directory
      - name: Caching Deps
        id: cache-npm-frontend
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        working-directory: client
        run: npm list
      - name: Install Dependencies
        working-directory: client # Set working directory for npm install
        run: npm i
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KUNAL_D1C1E }}
          projectId: ${{ secrets.PROJECT_ID }}
          entryPoint: client
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks